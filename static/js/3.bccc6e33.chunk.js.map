{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsItem/ContactsItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Alert/Alert.jsx","components/ContactForm/ContactForm.jsx","components/ContactsItem/ContactsItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","AppOLD.jsx","views/ContactsPageView/ContactsPageView.jsx","components/Alert/Alert.module.css"],"names":["module","exports","Alert","text","className","s","alert","ContactForm","state","name","number","isDuplicate","handleChange","e","currentTarget","value","setState","formSubmit","preventDefault","props","contactList","find","item","showAlert","trim","onSubmit","resetForm","setTimeout","this","CSSTransition","in","classNames","unmountOnExit","timeout","form","htmlFor","nameInputId","label","input","type","onChange","numberInputId","button","disabled","Component","connect","contactsSelectors","getContactlist","dispatch","contactsOperations","addContact","onDelete","id","deleteContact","stringElem","onClick","icon","list","getFilteredContacts","contacts","TransitionGroup","component","map","event","changeFilter","target","filter","filterName","items","getItems","isloading","getLoadingStatus","fetchContacts","phonebook","container","appear","h1","length","ContactsPageView","AppOLD"],"mappings":"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","file":"static/js/3.bccc6e33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\",\"label\":\"ContactForm_label__378f8\",\"button\":\"ContactForm_button__1MLZK\",\"enter\":\"ContactForm_enter__32Ojz\",\"enterActive\":\"ContactForm_enterActive__bfZhd\",\"exit\":\"ContactForm_exit__D9Hry\",\"exitActive\":\"ContactForm_exitActive__1rDp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__2c9Bl\",\"button\":\"ContactsItem_button__2jYf-\",\"icon\":\"ContactsItem_icon__3SdtD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"stringElem\":\"ContactList_stringElem__3poCB\",\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\",\"icon\":\"ContactList_icon__33G6D\",\"enter\":\"ContactList_enter__1Tfxs\",\"enterActive\":\"ContactList_enterActive__BPn6N\",\"exit\":\"ContactList_exit__3MW4R\",\"exitActive\":\"ContactList_exitActive__ZA3FS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\",\"filterName\":\"Filter_filterName__2ZMlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebook\":\"App_phonebook__FqHAB\",\"container\":\"App_container__1MQN3\",\"appear\":\"App_appear__3r9lb\",\"appearActive\":\"App_appearActive__1uccQ\",\"h1\":\"App_h1__26v8a\"};","import React from 'react';\nimport s from './Alert.module.css'\n\nexport default function Alert({text}) {\n  return (\n    <>\n      <p className={s.alert}>{text}</p>\n    </>\n  )\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Alert from '../Alert/Alert';\n// import operations from '../../redux/contacts-operations';\nimport s from './ContactForm.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport {contactsSelectors, contactsOperations} from '../../redux/contacts';\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    // name: null,\n    number: '',\n    isDuplicate: false,\n    alert:'',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  formSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    \n    if (this.props.contactList.find(item => item.name === name)) {\n      this.setState({ alert: 'Contact already exist' });\n      this.showAlert();\n      return;\n    }\n    if (name.trim() === '' || name === null) {\n    this.setState({ alert: 'введите слово' });\n      this.showAlert()\n      return\n    }\n    this.props.onSubmit({ name, number });\n      this.resetForm();\n      return\n    };\n\n \n  showAlert = () => {\n\n    this.setState({ isDuplicate: true });\n    setTimeout(() => this.setState({ isDuplicate: false }), 3000);\n    this.resetForm();\n}\n\n  resetForm = () => {\n    this.setState({ name: '', number: '', });\n  };\n\n  render() {\n    const { isDuplicate, alert} = this.state;\n    return (\n      <>\n        <CSSTransition in={isDuplicate} classNames={s} unmountOnExit timeout={250} >\n          <Alert text={alert}/>\n        </CSSTransition>\n        \n        <form className={s.form} onSubmit={this.formSubmit}>\n          <label htmlFor={this.nameInputId} className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={this.numberInputId} className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button\n            className={s.button}\n            type=\"submit\"\n            disabled={!this.state.name.trim()}\n            \n          >\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return { contactList: contactsSelectors.getContactlist(state) }}\n  \n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: (item) => dispatch(contactsOperations.addContact(item))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { AiOutlineClose } from 'react-icons/ai';\nimport s from './ContactsItem.module.css';\nimport {contactsOperations} from '../../redux/contacts';\nimport { connect } from 'react-redux';\n\nconst ContactsItem = ({ item , onDelete }) => {\n  return (\n    <>\n        <li className={s.item}>\n          <p className={s.stringElem}>{item.name}:</p>\n          <p>{item.number}</p>\n          <button className={s.button} type=\"button\" onClick={() => onDelete(item.id)}>\n            <AiOutlineClose className={s.icon} />\n          </button>\n        </li>\n    </>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: (id)=>dispatch(contactsOperations.deleteContact(id))\n})\n\nexport default connect(null, mapDispatchToProps) (ContactsItem)","import PropTypes from 'prop-types';\nimport ContactsItem from '../ContactsItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport {contactsSelectors} from '../../redux/contacts';\n\nconst ContactList = ({list}) => (\n  <section className={s.contacts}>\n    <TransitionGroup component=\"ul\" className={s.list} >\n      {list.map(item => (\n        <CSSTransition key={item.id} timeout={250} classNames={s} unmountOnExit>\n          <ContactsItem item={item} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </section>\n);\n\nContactList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  list: contactsSelectors.getFilteredContacts(state)\n});\n\nexport default  connect(mapStateToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport s from './Filter.module.css';\nimport {changeFilter} from '../../redux/contacts/contacts-actions';\n// import {contactsActions} from '../../redux/contacts';\n// const { changeFilter } = contactsActions;\n// console.log('12345678965432567896543::::', contactsActions);\n\nconst Filter = ({onChange }) => (\n  <section className={s.filter}>\n    <p className={s.filterName}>\n      Find contact by name\n    </p>\n    <label>\n      <input\n        className={s.input}\n        type=\"text\"\n        onChange={onChange}\n      />\n    </label>\n  </section>\n);\n\nconst mapDispachToProps = dispatch => ({\n  onChange: (event) => dispatch(changeFilter(event.target.value))\n})\nexport default connect(null, mapDispachToProps)(Filter);\n\n\n\n\n","import ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter/Filter';\nimport s from './App.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport {contactsSelectors, contactsOperations} from './redux/contacts';\n\n\nconst App = ({items, isloading}) => (\n      <>\n      <section className={s.phonebook}>\n      <div className={s.container}>\n        {isloading && <h2>Loading</h2>}\n        {/* {!isloading && <div> */}\n           <CSSTransition\n            in={true}\n            timeout={500}\n            classNames={s}\n            appear={true}>\n            <h1 className={s.h1}>Phonebook</h1>\n          </CSSTransition>     \n            <ContactForm />\n          {items.length>1 && <Filter/>}\n            <ContactList/>\n        {/* </div>} */}\n         \n        </div>\n        </section>\n      </>\n    );\n\nconst mapStateToProps = (state) => ({\n  items: contactsSelectors.getItems(state),\n  isloading: contactsSelectors.getLoadingStatus(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: dispatch(contactsOperations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import AppOLD from '../../AppOLD';\n\nconst ContactsPageView = () => {\n  return (\n    <AppOLD/>\n  )\n}\n\nexport default ContactsPageView;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1rkHi\"};"],"sourceRoot":""}