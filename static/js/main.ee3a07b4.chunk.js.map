{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-actions.js","redux/store.js","components/Navigation.jsx","components/AuthNav.jsx","components/UserMenu.jsx","components/AppBar.jsx","components/PrivatRoute.jsx","components/PublicRoute.jsx","App.jsx","index.js"],"names":["addAuthRequest","createAction","addAuthSuccess","addAuthError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","authActions","token","headers","common","Authorization","addRegister","credentials","dispatch","post","then","data","catch","error","message","logIn","a","response","logOut","getCurrentUser","getState","persistedToken","auth","get","getAuthed","state","isLogIn","userName","user","name","initialUserState","email","createReducer","_","payload","combineReducers","fetchContactRequest","contactsActions","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","fetchContacts","addContact","item","deleteContact","id","delete","fethContactAsync","createAsyncThunk","getItems","contacts","items","getContactlist","getFilteredContacts","createSelector","filter","normalizedFilter","toLowerCase","includes","getLoadingStatus","loading","changeFilter","itemsReducer","operations","fulfilled","filterReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","connect","isAuthed","authSelectors","exact","to","className","AuthNav","mapDispatchToProps","onLogout","authOperations","type","onClick","Component","component","redirectTo","routeProps","render","props","restricted","HomePageView","lazy","RegisterView","LoginView","ContactsPageView","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee3a07b4.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addAuthRequest = createAction('auth/addAuthRequest');\nexport const addAuthSuccess = createAction('auth/addAuthSuccess');\nexport const addAuthError = createAction('auth/addAuthError');\n\nexport const loginRequest = createAction('auth/loginReguest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutReguest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserReguest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","import axios from 'axios';\nimport * as authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\nconst {\n  addAuthRequest,\n  addAuthSuccess,\n  addAuthError,\n\n  loginRequest,\n  loginSuccess,\n  loginError,\n\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = authActions;\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst addRegister = credentials => dispatch => {\n  dispatch(addAuthRequest());\n  axios\n    .post('/users/signup', credentials)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(addAuthSuccess(data));\n    })\n    .catch(error => dispatch(addAuthError(error.message)));\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport default {\n  addRegister,\n  logIn,\n  logOut,\n  getCurrentUser,\n};\n","const getAuthed = state => state.auth.isLogIn;\nconst userName = state => state.auth.user.name;\n\nexport default {\n  getAuthed,\n  userName,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as authActions from './auth-actions';\n\nconst {\n  addAuthSuccess,\n  addAuthError,\n\n  loginSuccess,\n  loginError,\n\n  logoutSuccess,\n  logoutError,\n\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = authActions;\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [addAuthSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [addAuthSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [addAuthError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isLogIn = createReducer(false, {\n  [addAuthSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [logoutSuccess]: () => false,\n  [getCurrentUserSuccess]: () => true,\n  [addAuthError]: () => false,\n  [loginError]: () => false,\n  [logoutError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  isLogIn,\n  error,\n});\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport * as contactsActions from './contacts-actions';\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n} = contactsActions;\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    fetchContactError(error);\n  }\n};\n\nconst fethContactAsync = createAsyncThunk('contacts/fetchContact', async () => {\n  const { data } = await axios.get('./contacts');\n  return data;\n});\n\nconst addContact = item => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', item)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(delContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(delContactSuccess(id)))\n    .catch(error => dispatch(delContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  fethContactAsync,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getItems = state => state.contacts.items;\nconst getContactlist = state => getItems(state);\nconst getFilter = state => state.contacts.filter;\nconst getLoadingStatus = state => state.contacts.loading;\n\nconst getFilteredContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default {\n  getContactlist,\n  getFilteredContacts,\n  getLoadingStatus,\n  getItems,\n  // getFilter,\n};\n\n// const getFilteredContacts = ({ contacts: { items, filter } }) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return items.filter(item =>\n//     item.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as contactsActions from '../contacts/contacts-actions';\nimport operations from './contacts-operations';\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  delContactRequest,\n  delContactSuccess,\n  delContactError,\n  changeFilter,\n} = contactsActions;\n\nconst itemsReducer = createReducer([], {\n  // [fetchContactSuccess]: (_, { payload }) => payload,\n  [operations.fethContactAsync.fulfilled]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [delContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [delContactRequest]: () => true,\n  [delContactSuccess]: () => false,\n  [delContactError]: () => false,\n});\n\nexport default combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  loading,\n});\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const delContactRequest = createAction('contacts/delContactRequest');\nexport const delContactSuccess = createAction('contacts/delContactSuccess');\nexport const delContactError = createAction('contacts/delContactError');\n\nexport const changeFilter = createAction('changeFilter');\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  // persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { authReducer } from './auth';\nimport { contactsReducer } from '../redux/contacts';\nimport persistStore from 'redux-persist/es/persistStore';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    // auth: authReducer,\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSelectors } from '../redux/auth';\n\nconst Navigation = ({isAuthed}) => {\n  return (\n    <nav>\n      <NavLink\n        exact to=\"/\"\n        className=\"items\"\n      >\n        Главная\n      </NavLink>\n      {isAuthed&& <NavLink\n        exact to=\"/contacts\"\n        className=\"items\"\n      >\n        Контакты\n      </NavLink>}\n    </nav>\n  )\n}\nconst mapStateToProps = state => ({\n  isAuthed:authSelectors.getAuthed(state),\n})\n\nexport default  connect(mapStateToProps)( Navigation);","import { NavLink } from \"react-router-dom\";\n\nconst AuthNav = () => {\n  return (\n    <nav>\n      <NavLink to=\"/register\" \n        className=\"items\"\n      >\n        Регистрация\n      </NavLink>\n      <NavLink to=\"/login\" \n        className=\"items\"\n      >\n        Вход\n      </NavLink>\n    </nav>\n      \n\n  )\n}\n\nexport default AuthNav;","import { connect } from \"react-redux\";\nimport { authSelectors, authOperations } from '../redux/auth';\n\nconst UserMenu = ({name,  onLogout}) => {\n  \n  return (\n    <nav className='userMenu'>\n      <h3 className=\"h3\" >Welcome {name}</h3>\n      <button\n        type='button'\n        // className=\"logoutbutton\"\n        className=\"button\"\n        onClick={onLogout}\n      >\n        Logout\n      </button>\n    </nav>\n  )\n}\n\nconst mapStateToProps = state => ({\n  name: authSelectors.userName(state),\n})\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onLogout: () => dispatch(authOperations.logOut())\n//   }\n// }\n\nconst mapDispatchToProps = {\n  onLogout:authOperations.logOut\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav'\nimport { connect } from 'react-redux';\nimport {authSelectors} from '../redux/auth';\n// import ContactsPageView from '../views/ContactsPageView';\nimport UserMenu from './UserMenu';\n\n\nconst AppBar = ({ isAuthed = false }) => {\n  return (\n    <header className=\"app-bar\" >\n      <Navigation className=\"items\" />\n      {!isAuthed? <AuthNav className=\"items\"/>:<UserMenu className=\"items\"/>}\n    </header>\n  )\n}\n\nconst mapStateToProps = (state) => ({ isAuthed: authSelectors.getAuthed(state) })\n\n\nexport default connect(mapStateToProps)(AppBar);","import { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport{authSelectors} from '../redux/auth'\n\nconst PrivatRoute = ({\n  component: Component,\n  isAuthed,\n  redirectTo,\n  ...routeProps\n}) => (<Route\n  {...routeProps}\n  render={props => isAuthed ? <Component {...props} /> : <Redirect to={redirectTo} />\n  }\n/>\n)\n\nconst mapStateToProps = state => ({\n  isAuthed: authSelectors.getAuthed(state)\n}) \n\nexport default connect(mapStateToProps)(PrivatRoute);","import { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport { authSelectors } from '../redux/auth';\n\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthed,\n  redirectTo,\n  ...routeProps\n}) => (<Route {...routeProps}\n  render={props =>\n    isAuthed && routeProps.restricted\n      ? (<Redirect to={ redirectTo}/>)\n      : (<Component {...props} />)\n  }\n/>);\n\nconst mapStateToProps = state => ({\n  isAuthed: authSelectors.getAuthed(state),\n})\nexport default connect(mapStateToProps)(PublicRoute);","import { Switch, Route } from \"react-router\";\nimport { Component , Suspense, lazy} from \"react\";\nimport AppBar from './components/AppBar';\nimport { connect } from \"react-redux\";\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivatRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomePageView = lazy(() => import('./views/HomePageView/HomePageView'));\nconst RegisterView = lazy(() => import('./views/RegisterView/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView/LoginView'));\nconst ContactsPageView = lazy(() => import('./views/ContactsPageView/ContactsPageView'));\n\n\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount() {\n    this.props.onGetCurrentUser()\n  }\n  \n  render() {\n    \n  \n    return (\n      <>\n        <AppBar />\n        <Suspense fallback = {<p>Loadig...</p>}>\n        <Switch>\n          <Route\n            path=\"/register\"\n            restricted\n            component={RegisterView}\n            redirectTo =\"/contacts\"\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            component={LoginView}\n            redirectTo =\"/contacts\"\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            redirectTo='/login'\n            component={ContactsPageView}\n          />\n          <Route exact path=\"/\" component={HomePageView} />\n          </Switch>\n      </Suspense>\n          \n      </>\n    )\n\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n}\n\nexport default connect(null, mapDispatchToProps)(App)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/styles/styles.scss';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}